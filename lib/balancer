# lib/balancer
# Functions to control the configuration and operation of the Balancer service
# To enable, add the following to localrc
# ENABLED_SERVICES+=,balancer

# Dependencies:
# ``functions`` file
# ``SERVICE_{TENANT_NAME|PASSWORD}`` must be defined
# ``DEST`` must be defined
# ``MYSQL_{USER|PASSWORD}`` must be defined
# 
# <list other global vars that are assumed to be defined>

# ``stack.sh`` calls the entry points in this order:
#
# install_balancer
# configure_balancer
# init_balancer
# start_balancer
# stop_balancer
# cleanup_balancer

# Print the commands being run so that we can see the command that triggers
# an error.  It is also useful for following along as the install occurs.
set -o xtrace


# Defaults
# --------

# <define global variables here that belong to this project>

# Set up default directories
BALANCER_DIR=$DEST/balancer
BALANCER_CONF_DIR=/etc/balancer


# Entry Points
# ------------

# cleanup_balancer() - Remove residual data files, anything left over from previous
# runs that a clean run would need to clean up
function cleanup_balancer() {
    # This function intentionally left blank
    :
}

# configure_balancer() - Set config files, create data dirs, etc
function configure_balancer() {
   setup_develop $BALANCER_DIR

   if [ ! -d $BALANCER_CONF_DIR ]; then
      sudo mkdir -p $BALANCER_CONF_DIR
   fi
   sudo chown `whoami` $BALANCER_CONF_DIR

   # copy configuration files to $BALANCER_CONF_DIR
   cp $BALANCER_DIR/etc/* $BALANCER_CONF_DIR

   BALANCER_API_PASTE_INI=$BALANCER_CONF_DIR/balancer-api-paste.ini
   iniset $BALANCER_API_PASTE_INI filter:authtoken auth_host $KEYSTONE_AUTH_HOST
   iniset $BALANCER_API_PASTE_INI filter:authtoken auth_port $KEYSTONE_AUTH_PORT
   iniset $BALANCER_API_PASTE_INI filter:authtoken auth_protocol $KEYSTONE_AUTH_PROTOCOL
   iniset $BALANCER_API_PASTE_INI filter:authtoken auth_uri $KEYSTONE_SERVICE_PROTOCOL://$KEYSTONE_SERVICE_HOST:$KEYSTONE_SERVICE_PORT/v2.0
   iniset $BALANCER_API_PASTE_INI filter:authtoken admin_tenant_name $SERVICE_TENANT_NAME
   iniset $BALANCER_API_PASTE_INI filter:authtoken admin_user balancer
   iniset $BALANCER_API_PASTE_INI filter:authtoken admin_password $SERVICE_PASSWORD

   BALANCER_API_CONF=$BALANCER_CONF_DIR/balancer-api.conf
   iniset $BALANCER_API_CONF sql connection $BASE_SQL_CONN/balancer?charset=utf8
}

# init_balancer() - Initialize databases, etc.
function init_balancer() {
    # (re)create balancer database
    mysql -u$MYSQL_USER -p$MYSQL_PASSWORD -e 'DROP DATABASE IF EXISTS balancer;'
    mysql -u$MYSQL_USER -p$MYSQL_PASSWORD -e 'CREATE DATABASE balancer CHARACTER SET utf8;'

    $BALANCER_DIR/bin/balancer-api --dbsync
}

# install_balancer() - Collect source and prepare
function install_balancer() {
   git_clone $BALANCER_REPO $BALANCER_DIR $BALANCER_BRANCH
}

# start_balancer() - Start running processes, including screen
function start_balancer() {
   screen_it bal "cd $BALANCER_DIR && bin/balancer-api"
}

# stop_balancer() - Stop running processes (non-screen)
function stop_balancer() {
    # FIXME(dtroyer): stop only our screen screen window?
    :
}
